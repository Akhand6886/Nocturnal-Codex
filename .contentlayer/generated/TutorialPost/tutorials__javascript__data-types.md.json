{
  "title": "JS Data Types",
  "slug": "javascript-data-types",
  "order": 4,
  "description": "Explore the different data types available in JavaScript, both primitive and non-primitive.",
  "category": "JS Variables and Data Types",
  "body": {
    "raw": "\n## JavaScript Data Types\n\nJavaScript variables can hold different data types. JavaScript is a dynamically typed language, which means you don't need to specify the type of a variable when you declare it.\n\n### Primitive Data Types\nPrimitive data types are immutable (they cannot be changed).\n\n1.  **String**: Represents textual data.\n    ```javascript\n    let name = \"Alice\";\n    ```\n2.  **Number**: Represents numeric values, including integers and floating-point numbers.\n    ```javascript\n    let age = 30;\n    let price = 19.99;\n    ```\n3.  **BigInt**: Represents integers with arbitrary precision.\n    ```javascript\n    const veryLargeNumber = 9007199254740991n;\n    ```\n4.  **Boolean**: Represents `true` or `false`.\n    ```javascript\n    let isActive = true;\n    ```\n5.  **Undefined**: A variable that has been declared but not assigned a value has the value `undefined`.\n    ```javascript\n    let status; // status is undefined\n    ```\n6.  **Null**: Represents the intentional absence of any object value.\n    ```javascript\n    let user = null;\n    ```\n7.  **Symbol**: A unique and immutable primitive value, often used as object property keys.\n    ```javascript\n    const id = Symbol('id');\n    ```\n\n### Non-Primitive Data Type (Object)\nThe `object` data type can store collections of data.\n\n- **Object**: A collection of key-value pairs.\n  ```javascript\n  const person = {\n    firstName: \"John\",\n    lastName: \"Doe\",\n    age: 50\n  };\n  ```\n- **Array**: A special type of object for storing ordered collections.\n  ```javascript\n  const colors = [\"red\", \"green\", \"blue\"];\n  ```\n- **Function**: A block of code designed to perform a particular task.\n  ```javascript\n  function greet() {\n    return \"Hello!\";\n  }\n  ```\n",
    "html": "<h2>JavaScript Data Types</h2>\n<p>JavaScript variables can hold different data types. JavaScript is a dynamically typed language, which means you don't need to specify the type of a variable when you declare it.</p>\n<h3>Primitive Data Types</h3>\n<p>Primitive data types are immutable (they cannot be changed).</p>\n<ol>\n<li><strong>String</strong>: Represents textual data.\n<pre><code class=\"language-javascript\">let name = \"Alice\";\n</code></pre>\n</li>\n<li><strong>Number</strong>: Represents numeric values, including integers and floating-point numbers.\n<pre><code class=\"language-javascript\">let age = 30;\nlet price = 19.99;\n</code></pre>\n</li>\n<li><strong>BigInt</strong>: Represents integers with arbitrary precision.\n<pre><code class=\"language-javascript\">const veryLargeNumber = 9007199254740991n;\n</code></pre>\n</li>\n<li><strong>Boolean</strong>: Represents <code>true</code> or <code>false</code>.\n<pre><code class=\"language-javascript\">let isActive = true;\n</code></pre>\n</li>\n<li><strong>Undefined</strong>: A variable that has been declared but not assigned a value has the value <code>undefined</code>.\n<pre><code class=\"language-javascript\">let status; // status is undefined\n</code></pre>\n</li>\n<li><strong>Null</strong>: Represents the intentional absence of any object value.\n<pre><code class=\"language-javascript\">let user = null;\n</code></pre>\n</li>\n<li><strong>Symbol</strong>: A unique and immutable primitive value, often used as object property keys.\n<pre><code class=\"language-javascript\">const id = Symbol('id');\n</code></pre>\n</li>\n</ol>\n<h3>Non-Primitive Data Type (Object)</h3>\n<p>The <code>object</code> data type can store collections of data.</p>\n<ul>\n<li><strong>Object</strong>: A collection of key-value pairs.\n<pre><code class=\"language-javascript\">const person = {\n  firstName: \"John\",\n  lastName: \"Doe\",\n  age: 50\n};\n</code></pre>\n</li>\n<li><strong>Array</strong>: A special type of object for storing ordered collections.\n<pre><code class=\"language-javascript\">const colors = [\"red\", \"green\", \"blue\"];\n</code></pre>\n</li>\n<li><strong>Function</strong>: A block of code designed to perform a particular task.\n<pre><code class=\"language-javascript\">function greet() {\n  return \"Hello!\";\n}\n</code></pre>\n</li>\n</ul>"
  },
  "_id": "tutorials/javascript/data-types.md",
  "_raw": {
    "sourceFilePath": "tutorials/javascript/data-types.md",
    "sourceFileName": "data-types.md",
    "sourceFileDir": "tutorials/javascript",
    "contentType": "markdown",
    "flattenedPath": "tutorials/javascript/data-types"
  },
  "type": "TutorialPost",
  "url": "/tutorial/javascript/javascript-data-types",
  "language": "javascript"
}