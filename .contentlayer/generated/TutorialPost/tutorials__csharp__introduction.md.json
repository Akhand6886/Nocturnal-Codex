{
  "title": "Introduction to C#",
  "slug": "introduction-to-csharp",
  "order": 1,
  "description": "A brief overview of the C# programming language, its features, and its use in the .NET ecosystem.",
  "category": "Getting Started",
  "body": {
    "raw": "\n## What is C#?\n\nC# (pronounced \"C-sharp\") is a modern, object-oriented, and type-safe programming language developed by Microsoft. Released in 2000 as part of the .NET Framework, C# is designed for building a wide variety of secure and robust applications that run on the .NET ecosystem.\n\n### Key Features:\n- **Object-Oriented**: C# is a pure object-oriented language, enforcing concepts like encapsulation, inheritance, and polymorphism.\n- **Type-Safe**: It prevents type errors that can occur at runtime, leading to more reliable applications. Variables are strongly typed.\n- **Component-Oriented**: C# is designed for building reusable software components.\n- **Part of .NET**: It is the primary language for the .NET framework, giving it access to a vast library of pre-written code and a powerful runtime environment.\n- **Versatility**: Used for web applications (ASP.NET), game development (Unity), desktop applications (Windows Forms, WPF), and mobile apps (Xamarin, MAUI).\n\nC# has its roots in the C family of languages and will be immediately familiar to C, C++, Java, and JavaScript programmers. Its ongoing development has added many modern features like LINQ (Language Integrated Query) and async/await for asynchronous programming.",
    "html": "<h2>What is C#?</h2>\n<p>C# (pronounced \"C-sharp\") is a modern, object-oriented, and type-safe programming language developed by Microsoft. Released in 2000 as part of the .NET Framework, C# is designed for building a wide variety of secure and robust applications that run on the .NET ecosystem.</p>\n<h3>Key Features:</h3>\n<ul>\n<li><strong>Object-Oriented</strong>: C# is a pure object-oriented language, enforcing concepts like encapsulation, inheritance, and polymorphism.</li>\n<li><strong>Type-Safe</strong>: It prevents type errors that can occur at runtime, leading to more reliable applications. Variables are strongly typed.</li>\n<li><strong>Component-Oriented</strong>: C# is designed for building reusable software components.</li>\n<li><strong>Part of .NET</strong>: It is the primary language for the .NET framework, giving it access to a vast library of pre-written code and a powerful runtime environment.</li>\n<li><strong>Versatility</strong>: Used for web applications (ASP.NET), game development (Unity), desktop applications (Windows Forms, WPF), and mobile apps (Xamarin, MAUI).</li>\n</ul>\n<p>C# has its roots in the C family of languages and will be immediately familiar to C, C++, Java, and JavaScript programmers. Its ongoing development has added many modern features like LINQ (Language Integrated Query) and async/await for asynchronous programming.</p>"
  },
  "_id": "tutorials/csharp/introduction.md",
  "_raw": {
    "sourceFilePath": "tutorials/csharp/introduction.md",
    "sourceFileName": "introduction.md",
    "sourceFileDir": "tutorials/csharp",
    "contentType": "markdown",
    "flattenedPath": "tutorials/csharp/introduction"
  },
  "type": "TutorialPost",
  "url": "/tutorial/csharp/introduction-to-csharp",
  "language": "csharp"
}