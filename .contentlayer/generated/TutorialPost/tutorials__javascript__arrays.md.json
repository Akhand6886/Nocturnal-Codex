{
  "title": "JavaScript Arrays",
  "slug": "javascript-arrays",
  "order": 8,
  "description": "Learn how to work with arrays in JavaScript to store and manipulate collections of data.",
  "category": "JS Fundamentals",
  "body": {
    "raw": "\n## Understanding JavaScript Arrays\n\nAn array is a special variable that can hold more than one value at a time. It's a fundamental data structure for storing ordered collections of items.\n\n### Creating an Array\n\nYou can create an array using an array literal, which is the most common way:\n\n```javascript\n// An array of strings\nconst fruits = [\"Apple\", \"Banana\", \"Cherry\"];\n\n// An array of numbers\nconst numbers = [1, 1, 2, 3, 5, 8];\n\n// An array with mixed data types\nconst mixed = [42, \"hello\", true, null];\n```\n\n### Accessing Elements\n\nArray elements are accessed using zero-based indexes.\n\n```javascript\nconst fruits = [\"Apple\", \"Banana\", \"Cherry\"];\n\nconsole.log(fruits[0]); // Output: \"Apple\"\nconsole.log(fruits[1]); // Output: \"Banana\"\n\n// You can also change an element\nfruits[1] = \"Blueberry\";\nconsole.log(fruits); // Output: [\"Apple\", \"Blueberry\", \"Cherry\"]\n```\n\n### Common Array Properties and Methods\n\n-   **`.length`**: Returns the number of elements in the array.\n    ```javascript\n    console.log(fruits.length); // 3\n    ```\n\n-   **`.push()`**: Adds a new element to the end of an array.\n    ```javascript\n    fruits.push(\"Date\");\n    console.log(fruits); // [\"Apple\", \"Blueberry\", \"Cherry\", \"Date\"]\n    ```\n\n-   **`.pop()`**: Removes the last element from an array.\n    ```javascript\n    fruits.pop();\n    console.log(fruits); // [\"Apple\", \"Blueberry\", \"Cherry\"]\n    ```\n\n-   **`.forEach()`**: Executes a provided function once for each array element.\n    ```javascript\n    fruits.forEach(function(fruit) {\n      console.log(\"I love \" + fruit);\n    });\n    ```\n\n-   **`.map()`**: Creates a new array populated with the results of calling a provided function on every element.\n    ```javascript\n    const numbers = [1, 4, 9, 16];\n    const roots = numbers.map(Math.sqrt);\n    console.log(roots); // [1, 2, 3, 4]\n    ```\n\nArrays are one of the most useful and versatile parts of JavaScript.",
    "html": "<h2>Understanding JavaScript Arrays</h2>\n<p>An array is a special variable that can hold more than one value at a time. It's a fundamental data structure for storing ordered collections of items.</p>\n<h3>Creating an Array</h3>\n<p>You can create an array using an array literal, which is the most common way:</p>\n<pre><code class=\"language-javascript\">// An array of strings\nconst fruits = [\"Apple\", \"Banana\", \"Cherry\"];\n\n// An array of numbers\nconst numbers = [1, 1, 2, 3, 5, 8];\n\n// An array with mixed data types\nconst mixed = [42, \"hello\", true, null];\n</code></pre>\n<h3>Accessing Elements</h3>\n<p>Array elements are accessed using zero-based indexes.</p>\n<pre><code class=\"language-javascript\">const fruits = [\"Apple\", \"Banana\", \"Cherry\"];\n\nconsole.log(fruits[0]); // Output: \"Apple\"\nconsole.log(fruits[1]); // Output: \"Banana\"\n\n// You can also change an element\nfruits[1] = \"Blueberry\";\nconsole.log(fruits); // Output: [\"Apple\", \"Blueberry\", \"Cherry\"]\n</code></pre>\n<h3>Common Array Properties and Methods</h3>\n<ul>\n<li>\n<p><strong><code>.length</code></strong>: Returns the number of elements in the array.</p>\n<pre><code class=\"language-javascript\">console.log(fruits.length); // 3\n</code></pre>\n</li>\n<li>\n<p><strong><code>.push()</code></strong>: Adds a new element to the end of an array.</p>\n<pre><code class=\"language-javascript\">fruits.push(\"Date\");\nconsole.log(fruits); // [\"Apple\", \"Blueberry\", \"Cherry\", \"Date\"]\n</code></pre>\n</li>\n<li>\n<p><strong><code>.pop()</code></strong>: Removes the last element from an array.</p>\n<pre><code class=\"language-javascript\">fruits.pop();\nconsole.log(fruits); // [\"Apple\", \"Blueberry\", \"Cherry\"]\n</code></pre>\n</li>\n<li>\n<p><strong><code>.forEach()</code></strong>: Executes a provided function once for each array element.</p>\n<pre><code class=\"language-javascript\">fruits.forEach(function(fruit) {\n  console.log(\"I love \" + fruit);\n});\n</code></pre>\n</li>\n<li>\n<p><strong><code>.map()</code></strong>: Creates a new array populated with the results of calling a provided function on every element.</p>\n<pre><code class=\"language-javascript\">const numbers = [1, 4, 9, 16];\nconst roots = numbers.map(Math.sqrt);\nconsole.log(roots); // [1, 2, 3, 4]\n</code></pre>\n</li>\n</ul>\n<p>Arrays are one of the most useful and versatile parts of JavaScript.</p>"
  },
  "_id": "tutorials/javascript/arrays.md",
  "_raw": {
    "sourceFilePath": "tutorials/javascript/arrays.md",
    "sourceFileName": "arrays.md",
    "sourceFileDir": "tutorials/javascript",
    "contentType": "markdown",
    "flattenedPath": "tutorials/javascript/arrays"
  },
  "type": "TutorialPost",
  "url": "/tutorial/javascript/javascript-arrays",
  "language": "javascript"
}