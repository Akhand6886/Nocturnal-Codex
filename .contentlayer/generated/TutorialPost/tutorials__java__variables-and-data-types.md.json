{
  "title": "Java Variables and Data Types",
  "slug": "java-variables-data-types",
  "order": 3,
  "description": "Learn about declaring variables and the fundamental data types in Java.",
  "category": "Java Fundamentals",
  "body": {
    "raw": "\n## Variables in Java\n\nA variable is a container which holds the value while the Java program is executed. A variable is assigned with a data type.\n\nIn Java, all variables must be declared before they can be used.\n\n```java\n// SYNTAX: type variableName = value;\nint myNumber = 5;\nString greeting = \"Hello\";\nboolean isActive = true;\n```\n\n## Data Types\n\nData types specify the different sizes and values that can be stored in the variable. There are two types of data types in Java:\n\n### 1. Primitive Data Types\n\nPrimitive data types are predefined by the language and named by a keyword. There are 8 primitive types:\n\n- **`byte`**: 1 byte, stores whole numbers from -128 to 127\n- **`short`**: 2 bytes, stores whole numbers from -32,768 to 32,767\n- **`int`**: 4 bytes, stores whole numbers from -2,147,483,648 to 2,147,483,647 (most common for integers)\n- **`long`**: 8 bytes, stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807\n- **`float`**: 4 bytes, stores fractional numbers. Sufficient for storing 6 to 7 decimal digits\n- **`double`**: 8 bytes, stores fractional numbers. Sufficient for storing 15 decimal digits (most common for floating-point numbers)\n- **`boolean`**: 1 bit, stores `true` or `false` values\n- **`char`**: 2 bytes, stores a single character/letter or ASCII values.\n\n```java\nint myInt = 10000;\nfloat myFloat = 5.75f; // Note the 'f' suffix\nchar myLetter = 'D';\nboolean myBool = true;\n```\n\n### 2. Non-Primitive Data Types (Reference Types)\n\nNon-primitive types are created by the programmer and are not defined by Java (except for `String`). They are also known as reference types because they refer to objects.\n\n- **Classes**, **Interfaces**, **Arrays**, and **Strings** are examples of non-primitive types.\n\nThe main difference between primitive and non-primitive types is that primitive types are stored directly in memory where the variable is allocated, whereas non-primitive types store a reference (or address) to the memory location where the object is actually stored.\n",
    "html": "<h2>Variables in Java</h2>\n<p>A variable is a container which holds the value while the Java program is executed. A variable is assigned with a data type.</p>\n<p>In Java, all variables must be declared before they can be used.</p>\n<pre><code class=\"language-java\">// SYNTAX: type variableName = value;\nint myNumber = 5;\nString greeting = \"Hello\";\nboolean isActive = true;\n</code></pre>\n<h2>Data Types</h2>\n<p>Data types specify the different sizes and values that can be stored in the variable. There are two types of data types in Java:</p>\n<h3>1. Primitive Data Types</h3>\n<p>Primitive data types are predefined by the language and named by a keyword. There are 8 primitive types:</p>\n<ul>\n<li><strong><code>byte</code></strong>: 1 byte, stores whole numbers from -128 to 127</li>\n<li><strong><code>short</code></strong>: 2 bytes, stores whole numbers from -32,768 to 32,767</li>\n<li><strong><code>int</code></strong>: 4 bytes, stores whole numbers from -2,147,483,648 to 2,147,483,647 (most common for integers)</li>\n<li><strong><code>long</code></strong>: 8 bytes, stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807</li>\n<li><strong><code>float</code></strong>: 4 bytes, stores fractional numbers. Sufficient for storing 6 to 7 decimal digits</li>\n<li><strong><code>double</code></strong>: 8 bytes, stores fractional numbers. Sufficient for storing 15 decimal digits (most common for floating-point numbers)</li>\n<li><strong><code>boolean</code></strong>: 1 bit, stores <code>true</code> or <code>false</code> values</li>\n<li><strong><code>char</code></strong>: 2 bytes, stores a single character/letter or ASCII values.</li>\n</ul>\n<pre><code class=\"language-java\">int myInt = 10000;\nfloat myFloat = 5.75f; // Note the 'f' suffix\nchar myLetter = 'D';\nboolean myBool = true;\n</code></pre>\n<h3>2. Non-Primitive Data Types (Reference Types)</h3>\n<p>Non-primitive types are created by the programmer and are not defined by Java (except for <code>String</code>). They are also known as reference types because they refer to objects.</p>\n<ul>\n<li><strong>Classes</strong>, <strong>Interfaces</strong>, <strong>Arrays</strong>, and <strong>Strings</strong> are examples of non-primitive types.</li>\n</ul>\n<p>The main difference between primitive and non-primitive types is that primitive types are stored directly in memory where the variable is allocated, whereas non-primitive types store a reference (or address) to the memory location where the object is actually stored.</p>"
  },
  "_id": "tutorials/java/variables-and-data-types.md",
  "_raw": {
    "sourceFilePath": "tutorials/java/variables-and-data-types.md",
    "sourceFileName": "variables-and-data-types.md",
    "sourceFileDir": "tutorials/java",
    "contentType": "markdown",
    "flattenedPath": "tutorials/java/variables-and-data-types"
  },
  "type": "TutorialPost",
  "url": "/tutorial/java/java-variables-data-types",
  "language": "java"
}