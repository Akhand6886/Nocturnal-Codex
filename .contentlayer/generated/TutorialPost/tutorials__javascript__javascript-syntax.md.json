{
  "title": "JS Syntax",
  "slug": "javascript-syntax",
  "order": 7,
  "description": "Understand the basic syntax rules of JavaScript programming.",
  "category": "JavaScript Basics",
  "body": {
    "raw": "\n## JavaScript Syntax\n\nJavaScript syntax is the set of rules that define a correctly structured JavaScript program.\n\n### Basic Rules\n\n- **Case-Sensitive**: JavaScript is case-sensitive. `myVariable` and `myvariable` are two different variables.\n- **Semicolons**: Semicolons (`;`) are used to separate statements. They are often optional due to Automatic Semicolon Insertion (ASI), but it's a good practice to use them to avoid ambiguity.\n- **Whitespace**: JavaScript ignores extra spaces. You can add white space to your script to make it more readable.\n\n### Literals\nLiterals are fixed values in a program's source code.\n\n- **Numbers**: Can be integers or floating-point numbers. `100`, `3.14`.\n- **Strings**: Can be enclosed in single (`'`) or double (`\"`) quotes. `'Hello'`, `\"World\"`.\n- **Booleans**: `true` or `false`.\n- **Objects**: `{ key: 'value' }`.\n- **Arrays**: `[1, 2, 3]`.\n\n### Variables\nVariables are containers for storing data values. In JavaScript, you can use `var`, `let`, or `const`.\n\n```javascript\nlet x;       // Declare a variable\nx = 5;       // Assign a value\nlet y = 10;  // Declare and assign\nconst PI = 3.14; // Declare a constant\n```\n\n### Operators\nJavaScript uses arithmetic operators (`+`, `-`, `*`, `/`), assignment operators (`=`), and comparison operators (`==`, `>`).\n\n```javascript\nlet sum = 5 + 10; // 15\n```\n\n### Comments\nComments are used to explain code and are ignored by the interpreter.\n\n```javascript\n// This is a single-line comment\n\n/*\nThis is a\nmulti-line comment.\n*/\n```\n\nUnderstanding these basic syntax rules is the first step to writing JavaScript code.\n",
    "html": "<h2>JavaScript Syntax</h2>\n<p>JavaScript syntax is the set of rules that define a correctly structured JavaScript program.</p>\n<h3>Basic Rules</h3>\n<ul>\n<li><strong>Case-Sensitive</strong>: JavaScript is case-sensitive. <code>myVariable</code> and <code>myvariable</code> are two different variables.</li>\n<li><strong>Semicolons</strong>: Semicolons (<code>;</code>) are used to separate statements. They are often optional due to Automatic Semicolon Insertion (ASI), but it's a good practice to use them to avoid ambiguity.</li>\n<li><strong>Whitespace</strong>: JavaScript ignores extra spaces. You can add white space to your script to make it more readable.</li>\n</ul>\n<h3>Literals</h3>\n<p>Literals are fixed values in a program's source code.</p>\n<ul>\n<li><strong>Numbers</strong>: Can be integers or floating-point numbers. <code>100</code>, <code>3.14</code>.</li>\n<li><strong>Strings</strong>: Can be enclosed in single (<code>'</code>) or double (<code>\"</code>) quotes. <code>'Hello'</code>, <code>\"World\"</code>.</li>\n<li><strong>Booleans</strong>: <code>true</code> or <code>false</code>.</li>\n<li><strong>Objects</strong>: <code>{ key: 'value' }</code>.</li>\n<li><strong>Arrays</strong>: <code>[1, 2, 3]</code>.</li>\n</ul>\n<h3>Variables</h3>\n<p>Variables are containers for storing data values. In JavaScript, you can use <code>var</code>, <code>let</code>, or <code>const</code>.</p>\n<pre><code class=\"language-javascript\">let x;       // Declare a variable\nx = 5;       // Assign a value\nlet y = 10;  // Declare and assign\nconst PI = 3.14; // Declare a constant\n</code></pre>\n<h3>Operators</h3>\n<p>JavaScript uses arithmetic operators (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>), assignment operators (<code>=</code>), and comparison operators (<code>==</code>, <code>></code>).</p>\n<pre><code class=\"language-javascript\">let sum = 5 + 10; // 15\n</code></pre>\n<h3>Comments</h3>\n<p>Comments are used to explain code and are ignored by the interpreter.</p>\n<pre><code class=\"language-javascript\">// This is a single-line comment\n\n/*\nThis is a\nmulti-line comment.\n*/\n</code></pre>\n<p>Understanding these basic syntax rules is the first step to writing JavaScript code.</p>"
  },
  "_id": "tutorials/javascript/javascript-syntax.md",
  "_raw": {
    "sourceFilePath": "tutorials/javascript/javascript-syntax.md",
    "sourceFileName": "javascript-syntax.md",
    "sourceFileDir": "tutorials/javascript",
    "contentType": "markdown",
    "flattenedPath": "tutorials/javascript/javascript-syntax"
  },
  "type": "TutorialPost",
  "url": "/tutorial/javascript/javascript-syntax",
  "language": "javascript"
}