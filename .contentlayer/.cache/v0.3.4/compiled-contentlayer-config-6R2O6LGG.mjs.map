{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["\nimport { defineDocumentType, makeSource } from 'contentlayer/source-files'\n\nexport const BlogPost = defineDocumentType(() => ({\n  name: 'BlogPost',\n  filePathPattern: `blog/**/*.md`,\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    author: { type: 'string', required: false, default: 'The Nocturnist' },\n    tags: { type: 'list', of: { type: 'string' }, required: false },\n    category: { type: 'string', required: false, default: 'General' },\n    excerpt: { type: 'string', required: true },\n    imageUrl: { type: 'string', required: false },\n    dataAiHint: { type: 'string', required: false },\n    seriesId: { type: 'string', required: false },\n    seriesOrder: { type: 'number', required: false },\n    featured: { type: 'boolean', required: false, default: false },\n  },\n  computedFields: {\n    url: { type: 'string', resolve: (doc) => `/blog/${doc._raw.flattenedPath.replace('blog/', '')}` },\n    slug: { type: 'string', resolve: (doc) => doc._raw.flattenedPath.replace('blog/', '') },\n    id: { type: 'string', resolve: (doc) => doc._raw.flattenedPath.replace('blog/', '') },\n  },\n}));\n\nexport const TutorialPost = defineDocumentType(() => ({\n  name: 'TutorialPost',\n  filePathPattern: `tutorials/**/*.md`, \n  contentType: 'markdown',\n  fields: {\n    title: { type: 'string', required: true },\n    slug: { type: 'string', required: true },\n    order: { type: 'number', required: true },\n    description: { type: 'string', required: true },\n    category: { type: 'string', required: true },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (doc) => `/tutorial/${doc._raw.sourceFileDir.split('/')[1]}/${doc.slug}`,\n    },\n    language: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileDir.split('/')[1],\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: 'content',\n  documentTypes: [BlogPost, TutorialPost],\n})\n"],
  "mappings": ";AACA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,WAAW,mBAAmB,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,QAAQ,EAAE,MAAM,UAAU,UAAU,OAAO,SAAS,iBAAiB;AAAA,IACrE,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,MAAM;AAAA,IAC9D,UAAU,EAAE,MAAM,UAAU,UAAU,OAAO,SAAS,UAAU;AAAA,IAChE,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,UAAU,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC5C,YAAY,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC9C,UAAU,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC5C,aAAa,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC/C,UAAU,EAAE,MAAM,WAAW,UAAU,OAAO,SAAS,MAAM;AAAA,EAC/D;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK,EAAE,MAAM,UAAU,SAAS,CAAC,QAAQ,SAAS,IAAI,KAAK,cAAc,QAAQ,SAAS,EAAE,CAAC,GAAG;AAAA,IAChG,MAAM,EAAE,MAAM,UAAU,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,SAAS,EAAE,EAAE;AAAA,IACtF,IAAI,EAAE,MAAM,UAAU,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,SAAS,EAAE,EAAE;AAAA,EACtF;AACF,EAAE;AAEK,IAAM,eAAe,mBAAmB,OAAO;AAAA,EACpD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC7C;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,aAAa,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI;AAAA,IACjF;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,CAAC;AAAA,IACvD;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,UAAU,YAAY;AACxC,CAAC;",
  "names": []
}
