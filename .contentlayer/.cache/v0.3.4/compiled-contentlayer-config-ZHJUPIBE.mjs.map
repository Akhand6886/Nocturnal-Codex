{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["\nimport { defineDocumentType, makeSource } from 'contentlayer/source-files'\n\nexport const BlogPost = defineDocumentType(() => ({\n  name: 'BlogPost',\n  filePathPattern: `blog/**/*.md`, // Matches files in content/blog\n  contentType: 'markdown',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    updatedDate: { type: 'date', required: false }, // Added updatedDate\n    author: { type: 'string', required: true },\n    tags: { type: 'list', of: { type: 'string' }, default: [] },\n    category: { type: 'string', required: false },\n    excerpt: { type: 'string', required: true },\n    imageUrl: { type: 'string' },\n    dataAiHint: { type: 'string' },\n    seriesId: { type: 'string', required: false }, \n    seriesOrder: { type: 'number', required: false },\n    featured: { type: 'boolean', default: false, required: false },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.flattenedPath.replace(/^blog\\/?/, ''),\n    },\n    id: { // Keep 'id' consistent with previous structure, typically same as slug for blog posts\n      type: 'string',\n      resolve: (doc) => doc._raw.flattenedPath.replace(/^blog\\/?/, ''),\n    }\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: 'content',\n  documentTypes: [BlogPost],\n  mdx: { // ensure mdx options are correctly set if you use mdx, otherwise markdown options\n    remarkPlugins: [], // add remark-html or other remark plugins if needed for markdown processing\n    rehypePlugins: [],\n  },\n})\n\n"],
  "mappings": ";AACA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,WAAW,mBAAmB,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,aAAa,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA;AAAA,IAC7C,QAAQ,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACzC,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,SAAS,CAAC,EAAE;AAAA,IAC1D,UAAU,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC5C,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,UAAU,EAAE,MAAM,SAAS;AAAA,IAC3B,YAAY,EAAE,MAAM,SAAS;AAAA,IAC7B,UAAU,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC5C,aAAa,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC/C,UAAU,EAAE,MAAM,WAAW,SAAS,OAAO,UAAU,MAAM;AAAA,EAC/D;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,IACjE;AAAA,IACA,IAAI;AAAA;AAAA,MACF,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,IACjE;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,QAAQ;AAAA,EACxB,KAAK;AAAA;AAAA,IACH,eAAe,CAAC;AAAA;AAAA,IAChB,eAAe,CAAC;AAAA,EAClB;AACF,CAAC;",
  "names": []
}
